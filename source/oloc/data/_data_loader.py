r"""
:author: WaterRun
:date: 2025-03-10
:file: _data_loader.py
:description: Script program to generate various table data required for oloc runtime
"""

import simpsave as ss

r"""
After modification, run this script directly in the "data" path
"""

r"""
Retain decimal places
Type: int
Range: >= 0
Description: The number of decimal places to retain. Must be a positive integer, greater than or equal to zero.
"""
retain_decimal_places: int = 7

r"""
Symbol Mapping Table
Type: dict
Description: This dictionary maps symbols (keys) to a list of possible conversions (values). All strings in the list (except the preserved function names) are converted to the corresponding key. Order: from top to bottom, left to right.
Warning: Note the order of substitution: top to bottom, left to right
"""
symbol_mapping_table: dict[str, list[str]] = {
    "": [" ", "=", "_", "equal", "equals", "eq", "is", "are", "=>", "->", "rad", "radians", "等", "于", "以", "是", "个"],
    "√": ["√", "┌", "根号"],
    "°": ["°", "degree", "deg", "^o", "度"],
    "^": ["^", "**"],
    "+": ["+", "plus", "add", "加"],
    "-": ["-", "minus", "sub",  "减"],
    "*": ["*", "・", "·", "×", "mul",  "multiply", "乘"],
    "/": ["/", "÷", "div",  "divide", "除"],
    "%": ["%", "余"],
    "!": ["!", "阶层"],
    "π": ["π", "pi", "PI", "Pi", "P", "p", "派", "圆周率"],
    "𝑒": ["𝑒", "e", "自然", "自然底数"],
    "...": ["...", "repeat", "循环"],
    ".": [".", "dot", "点"],
    "(": ["(", "（", "左括号", "左小括号"],
    ")": [")", "）", "右括号", "右小括号"],
    "[": ["[", "左中括号"],
    "]": ["]", "右中括号"],
    "{": ["{", "左大括号"],
    "}": ["}", "右大括号"],
    "?": ["?", "def", "dflt", "default", "指定"],
    ",": [","],
    ";": [";"],
    "|": ["|"],
    "\\": ["\\"],
    "0": ["0", "zero", "零", "〇"],
    "1": ["1", "one", "一"],
    "2": ["2", "two", "二"],
    "3": ["3", "three", "三"],
    "4": ["4", "four", "四"],
    "5": ["5", "five", "五"],
    "6": ["6", "six", "六"],
    "7": ["7", "seven", "七"],
    "8": ["8", "eight", "八"],
    "9": ["9", "nine", "九"],
    "10": ["10", "ten", "十"],
}

r"""
Function conversion table
Type: dict
Description: This dictionary maps function names (keys) to a list of possible equivalent representations (values). All strings in the list (except the preserved function names) are converted to the corresponding key. Order: from top to bottom, left to right. The standard function name is the function name before the parentheses, and these names will be protected during the symbol mapping phase.
"""
function_conversion_table: dict[str, list[str]] = {
    "sqrt(x)": ["sqrt(x)", "x^(1/2)", "√x", "pow(x,1/2)"],
    "square(x)": ["square(x)", "x^2", "pow(x,2)", "sq(x)"],
    "cube(x)": ["cube(x)", "x^3", "pow(x,3)", "cub(x)"],
    "reciprocal(x)": ["reciprocal(x)", "x^-1", "pow(x,-1)", "rec(x)"],
    "pow(x,y)": ["pow(x,y)", "x^y", "x**y", "power(x,y)"],
    "exp(x)": ["exp(x)", "pow(e,x)"],
    "mod(x,y)": ["mod(x,y)", "x%y", "modulo(x,y)"],
    "fact(x)": ["fact(x)", "x!", "factorial(x)"],
    "abs(x)": ["abs(x)", "|x|"],
    "sign(x)": ["sign(x)"],
    "rad(x)": ["rad(x)", "x°"],
    "gcd(x,y)": ["gcd(x,y)"],
    "lcm(x,y)": ["lcm(x,y)"],
}

r"""
Formatting Output Function Options Table
Type: Dict
Description: Configure each function setting of the formatted output filter
"""
formatting_output_function_options_table: dict[str, any] = {
    "main switch": True,
    "number separators add thresholds": -1,
    "scientific notation adding thresholds": -1,
    "spaces between token": -1,
    "operator form functions": True,
    "retain '?'": True,
}

r"""
Transcendental Function Values Table
Type: Dict
Description: A lookup table for exact or simplified values of common transcendental functions at specific points.
"""
transcendental_function_table: dict = {}

"""test cases"""
test_cases = [
    # 基础整数测试
    "42",
    "-42",
    "+42",
    "0",
    "+0",
    "-0",
    "000042",  # 前导零
    "1234567890",  # 大整数
    "1,234,567,890",  # 带分隔符的大整数
    "1,2,3,4",  # 不规则的分隔符

    # 小数测试
    "3.14",
    "-3.14",
    "+3.14",
    "0.5",
    ".5",  # 省略整数部分的小数
    "10.",  # 省略小数部分的小数
    "0.0",
    ".0",
    "0.",
    "-.5",  # 负号直接接小数点
    "+.5",  # 正号直接接小数点
    "0.000000001",  # 极小小数
    "999999.999999",  # 极大小数
    "1,234.56",  # 带分隔符的小数
    "1.2.3",  # 多个小数点（错误）
    ".",  # 只有小数点（错误）
    "1e6",  # 科学计数法（系统应该拒绝）
    "1,000,00.5",  # 不规则的分隔符

    # 百分数测试
    "50%",
    "-25%",
    "+30%",
    "3.14%",
    "0%",
    ".5%",  # 省略整数部分的百分数
    "100.%",  # 省略小数部分的百分数
    "0.000001%",  # 极小百分数
    "9999.999%",  # 极大百分数
    "50%%",  # 重复百分号（错误）
    "%50",  # 百分号在前（错误）
    "50% + 25%",  # 百分数运算
    "50% * 2",  # 百分数与整数运算
    "100%(50+25)",  # 百分号与括号（应解析为取余）
    "50,000%",  # 带分隔符的百分数
    "50%,000",  # 不正确的分隔符位置（错误）

    # 分数测试
    "1/2",
    "-1/2",
    "+3/4",
    "7/8",
    "0/1",
    "5/-10",  # 分母为负
    "-5/-10",  # 分子分母都为负
    "22/7",  # π的近似值
    "1/0",  # 分母为零（错误）
    "0/0",  # 分子分母都为零（错误）
    "/2",  # 缺少分子（错误）
    "2/",  # 缺少分母（错误）
    "1/2/3",  # 连续分数（不明确）
    "999999/1",  # 大分子
    "1/999999",  # 大分母
    "1,000/2,000",  # 带分隔符的分数
    "1,000,000/1,000",  # 带分隔符的分数
    "(1+2)/3",  # 表达式作为分子
    "1/(2+3)",  # 表达式作为分母
    "(1+2)/(3+4)",  # 表达式作为分子和分母
    "1/-0",  # 分母为负零（错误）
    "1+/2",  # 前面带运算符（错误）

    # 带分数测试
    "3\\1/2",  # 3+1/2 = 7/2
    "-2\\1/4",
    "+5\\3/4",
    "10\\3/4",
    "0\\1/2",
    "100\\99/100",  # 大数带分数
    "3\\-1/2",  # 分数部分分子为负（错误）
    "3\\1/-2",  # 分数部分分母为负（错误）
    "-3\\1/2",  # 整体为负
    "3\\0/2",  # 分数部分分子为零
    "3\\1/0",  # 分数部分分母为零（错误）
    "3\\",  # 缺少分数部分（错误）
    "\\1/2",  # 缺少整数部分（错误）
    "3.5\\1/2",  # 整数部分为小数（错误）
    "3\\\1/2",  # 多余的反斜杠（错误）
    "3\\1/2/3",  # 不明确的连续分数（错误）
    "3\\1\\/2",  # 格式错误（错误）
    "1,000\\1/2",  # 带分隔符的带分数
    "\\\\1/2",  # 多余的反斜杠（错误）

    # 无限循环小数测试
    "0.333...",
    "-0.333...",
    "+0.5...",
    "1.414...",
    "0.9999...",
    "0.123...",
    "0.142857142857...",  # 1/7的循环小数
    ".333...",  # 省略整数部分
    "10.0...",  # 循环零
    "0.000...",  # 全是零的循环（等于0）
    "0....",  # 整数后直接循环（错误）
    "0.3.3...",  # 多个小数点（错误）
    "0.333.....",  # 过多的点（应正常解析）
    "0.3333",  # 没有省略号（普通小数）
    "0.333.. ",  # 省略号后有空格（测试空格处理）
    "0.333..",  # 只有两个点（错误）
    "0.333,,,",  # 使用逗号代替点（错误）
    "0...",  # 没有小数部分直接循环（错误）
    "1,000.333...",  # 带分隔符的循环小数
    ".333...%",  # 无限循环小数加百分号（错误）

    # 显式循环小数测试
    "0.3:3",  # 0.333...
    "-0.3:3",
    "+0.3:3",
    "1.4:14",  # 1.414141...
    "0.:9",  # 0.999...
    "0.1:42857",  # 1/7 = 0.142857142857...
    ".:5",  # 省略整数部分
    "10.:0",  # 循环零
    "0.:0",  # 全是零的循环（等于0）
    "0:3",  # 整数后直接循环（错误）
    "0.3:3:4",  # 多个循环标记（错误）
    "0.3:",  # 缺少循环部分（错误）
    ":3",  # 缺少前缀（错误）
    "0.3:3...",  # 与省略号混用（错误）
    "0.3;3",  # 使用分号代替冒号（错误）
    "1,000.1:42857",  # 带分隔符的显式循环小数
    "0.3:3%",  # 显式循环小数加百分号（错误）

    # 原生无理数测试
    "π",
    "-π",
    "+π",
    "𝑒",
    "-𝑒",
    "+𝑒",
    "pi",
    "PI",
    "Pi",
    "pI",
    "e",
    "E",
    "π?3",  # 带精度指示的π
    "𝑒?5",  # 带精度指示的e
    "pi?4",
    "E?2",
    "π?",  # 缺少精度值（错误）
    "𝑒?0",  # 精度为零
    "π?-2",  # 负精度（错误）
    "𝑒?3.5",  # 精度为小数
    "π?3?4",  # 多个精度指示（错误）
    "π??3",  # 连续问号（错误）
    "2*π",  # 无理数乘法
    "π/2",  # 无理数除法
    "π+𝑒",  # 无理数加法
    "π^2",  # 无理数幂
    "π%2",  # 无理数取余

    # 短自定义无理数测试
    "x",
    "-x",
    "+x",
    "y",
    "a",
    "z",
    "α",  # 希腊字母
    "β",
    "γ",
    "λ",
    "值",  # 中文字符
    "数",
    "x?-",  # 负数自定义无理数
    "y?+",  # 正数自定义无理数
    "a?2.5",  # 带值的自定义无理数
    "z?0",  # 值为零的自定义无理数
    "α?π",  # 值为π的自定义无理数（错误，应为数值）
    "β?",  # 缺少值（错误）
    "γ??",  # 连续问号（错误）
    "λ?3?4",  # 多个值（错误）
    "x_y",  # 带下划线（应等同于xy）
    "x_1",  # 带数字下标
    "x^",  # 与运算符冲突（错误）
    "o",  # 与度数符号冲突（潜在问题）
    "r",  # 可能与变量混淆
    "2x",  # 数字乘以变量
    "x/y",  # 变量除法
    "x+y-z",  # 变量代数运算
    "x^2",  # 变量的平方
    "√x",  # 变量开方

    # 长自定义无理数测试
    "<phi>",
    "-<phi>",
    "+<phi>",
    "<黄金分割比>",
    "<root2>",
    "<Pi approximation>",
    "<with space>",
    "<multi word long name>",
    "<>",  # 空内容（错误）
    "< >",  # 只有空格（错误）
    "<phi",  # 未闭合（错误）
    "phi>",  # 未开启（错误）
    "<<phi>>",  # 嵌套尖括号（错误）
    "<phi><psi>",  # 连续无理数
    "<phi>?1.618",  # 带值的长自定义无理数
    "<negative>?-",  # 负数长自定义无理数
    "<positive>?+",  # 正数长自定义无理数
    "<zero>?0",  # 零值长自定义无理数
    "<too long>?<another>",  # 值为另一无理数（错误）
    "<error>?",  # 缺少值（错误）
    "<error>??",  # 连续问号（错误）
    "<error>?3?4",  # 多个值（错误）
    "<phi?1.618>",  # 问号在尖括号内（错误）
    "<phi>?1,618",  # 值带分隔符
    "2*<phi>",  # 数字乘以长自定义无理数
    "<phi>+<psi>",  # 长自定义无理数相加
    "<phi>^2",  # 长自定义无理数的幂
    "√<phi>",  # 长自定义无理数开方

    # 运算符测试
    "1+2",
    "1 + 2",  # 带空格
    "3-4",
    "3 - 4",
    "5*6",
    "5 * 6",
    "5·6",  # 中点乘法
    "5×6",  # 乘号
    "7/8",
    "7 / 8",
    "7÷8",  # 除号
    "2^3",
    "2 ^ 3",
    "2**3",  # 幂运算符的另一种表示
    "2 ** 3",
    "10%3",  # 取余运算符
    "10 % 3",
    "5!",
    "5 !",
    "90°",  # 角度符号
    "90 °",
    "90deg",
    "90degree",
    "90^o",
    "|x|",  # 绝对值
    "| x |",
    "√16",  # 平方根
    "√ 16",
    "┌16",  # 另一种平方根符号
    "++3",  # 连续加号（错误）
    "--4",  # 连续减号（应解析为正号）
    "+-5",  # 加减混合（应解析为负号）
    "-+6",  # 减加混合（应解析为负号）
    "3//4",  # 连续除号（错误）
    "3**",  # 缺少指数（错误）
    "^3",  # 缺少底数（错误）
    "!5",  # 阶乘符号位置错误（错误）
    "|5",  # 绝对值未闭合（错误）
    "5|",  # 绝对值未开启（错误）
    "°90",  # 度数符号位置错误（错误）
    "√-1",  # 负数开根（无理数）
    "5!!",  # 双阶乘（错误，应为嵌套）
    "|(3+4)|",  # 绝对值内包含表达式
    "3^2^3",  # 连续幂
    "3!+4!",  # 阶乘相加
    "√√16",  # 连续开方
    "||3-4||",  # 嵌套绝对值（错误）

    # 括号测试
    "(1+2)",
    "( 1 + 2 )",  # 带空格
    "[3*4]",
    "[ 3 * 4 ]",
    "{5/6}",
    "{ 5 / 6 }",
    "((1+2)*(3-4))",
    "[(1+2)*(3+4)]",
    "{(1+2)*[3+4]}",
    "()",  # 空括号（错误）
    "(",  # 未闭合括号（错误）
    ")",  # 未开启括号（错误）
    "]",  # 未开启中括号（错误）
    "[",  # 未闭合中括号（错误）
    "}",  # 未开启大括号（错误）
    "{",  # 未闭合大括号（错误）
    "(]",  # 括号类型不匹配（错误）
    "[)",  # 括号类型不匹配（错误）
    "{]",  # 括号类型不匹配（错误）
    "[}",  # 括号类型不匹配（错误）
    "()(",  # 括号嵌套错误（错误）
    "(a+b]",  # 不同类型的闭合括号（错误）
    "3([2+4)",  # 括号嵌套错误（错误）
    "{[3+4]}",  # 正确的嵌套
    "[{3+4}]",  # 括号层级错误（错误）
    "(((((5)))))",  # 多层嵌套
    "((2+3)*4",  # 缺少闭合括号（错误）
    "2+3)*4",  # 缺少开启括号（错误）
    "2(3+4)",  # 隐式乘法
    "x(y+z)",  # 变量隐式乘法
    "(x+y)(a+b)",  # 表达式隐式乘法
    "(2+3)(4+5)",  # 表达式隐式乘法
    "(1+2)+[3+4]",  # 混合括号
    "[1+2]+{3+4}",  # 混合括号（错误，应该是小括号包中括号包大括号）
    "{(1+2)}",  # 括号层级错误（错误）
    "({1+2})",  # 括号层级错误（错误）

    # 支持的函数测试
    "pow(2,3)",
    "pow(-2,3)",
    "pow(2,-3)",
    "pow(0,0)",  # 0的0次方（定义为1）
    "pow(2;3)",  # 使用分号作为分隔符
    "pow(2,;3)",  # 分隔符错误（错误）
    "pow(2,,3)",  # 多余的分隔符（错误）
    "pow(,2,3)",  # 开始就是分隔符（错误）
    "pow(2,3,)",  # 结尾是分隔符（错误）
    "pow(2,)",  # 缺少第二个参数（错误）
    "pow(,3)",  # 缺少第一个参数（错误）
    "pow()",  # 缺少所有参数（错误）
    "pow(2,3)(4,5)",  # 连续函数调用（错误）
    "pow((1+2),(3+4))",  # 表达式作为参数
    "pow(1,000,2,000)",  # 参数带分隔符（应解析为4个参数，错误）
    "pow(1;000;2;000)",  # 使用分号的参数带分隔符（错误）
    "pow",  # 函数名没有括号（错误）
    "sqrt(16)",
    "sqrt(-16)",  # 负数开根
    "sqrt()",  # 缺少参数（错误）
    "square(2)",
    "square(-5)",
    "cube(3)",
    "cube(-2)",
    "reciprocal(2/3)",
    "reciprocal(0)",  # 零的倒数（错误）
    "exp(2)",
    "exp(-1)",
    "mod(9, 4)",
    "mod(-9, 4)",
    "mod(9, -4)",
    "mod(0, 7)",
    "mod(7, 0)",  # 除以零（错误）
    "fact(5)",
    "fact(0)",
    "fact(-1)",  # 负数阶乘（错误）
    "fact(3.5)",  # 小数阶乘（错误）
    "abs(-3)",
    "abs(0)",
    "abs(3+4i)",  # 复数绝对值（不支持）
    "abs(x?-)",  # 负数自定义无理数的绝对值
    "sign(-5)",
    "sign(0)",
    "sign(5)",
    "sign(x?-)",  # 自定义负无理数的符号
    "rad(180)",
    "rad(45)",
    "rad(0)",
    "rad(-90)",
    "gcd(12, 18)",
    "gcd(7, 13)",
    "gcd(0, 5)",
    "gcd(0, 0)",  # 0和0的GCD（错误）
    "gcd(3.5, 4)",  # 小数GCD（错误）
    "gcd(-12, 18)",  # 负数GCD（错误，仅定义在自然数上）
    "lcm(4, 5)",
    "lcm(7, 9)",
    "lcm(0, 5)",
    "lcm(0, 0)",  # 0和0的LCM（错误）
    "lcm(3.5, 4)",  # 小数LCM（错误）
    "lcm(-4, 6)",  # 负数LCM（错误，仅定义在自然数上）
    "SQRT(16)",  # 大写函数名
    "sqrt(16)+pow(2,3)",  # 函数组合
    "gcd(lcm(4,6),lcm(6,8))",  # 嵌套函数
    "undefined(5)",  # 未定义函数（错误）

    # 复杂表达式测试
    "1+2*3",
    "(1+2)*3",
    "3*(4+5)/2",
    "3*(4+5)^2",
    "√(2)^2",
    "√(4+5)*(2-1)",
    "2π*r",  # 圆周长公式
    "π*r^2",  # 圆面积公式
    "3\\1/2 + 2\\3/4",  # 带分数加法
    "(x+y)/(a-b)",
    "abs(x-y)/(x+y)",
    "gcd(lcm(a,b),c)",
    "3+4-5*6/7^8",
    "(3+4)-(5*6)/(7^8)",
    "√(a^2+b^2+c^2)",
    "2π*√(l/g)",  # 单摆周期公式
    "π/1.125...",  # 原生无理数除以循环小数
    "1.333... + 0.5:5",  # 混合循环小数
    "3\\1/2 - 1\\3/4",  # 带分数减法
    "75% * (1 + 0.5:5)",  # 百分数乘以显式循环小数
    "3,000/1,500 + 2.5:5",  # 带分隔符的分数加显式循环小数
    "(a?2.5)^(b?3.1)",  # 自定义无理数的幂
    "lcm(gcd(24,36),gcd(18,42))",  # 嵌套GCD和LCM
    "√(π^2 + 𝑒^2)",  # 原生无理数平方和的平方根
    "pow(2,1/2) * pow(9,1/2)",  # 幂函数相乘
    "fact(5) / fact(3)",  # 阶乘相除
    "(3.14... * r^2) / (2π * r)",  # 循环小数和原生无理数混合
    "x?3.14 + y?2.718",  # 带值的自定义无理数相加
    "<phi>?1.618 * <psi>?0.5:5",  # 长自定义无理数乘以显式循环小数
    "rad(120) + rad(60)",  # 角度函数相加
    "abs(3.5:5 - 3.14...)",  # 循环小数之差的绝对值

    # 混合表达式测试
    "3+4*2/(1-5)^2",
    "3+4*2/(1-5)^2^3",
    "(2.5+1.5)*(3.75-0.75)/(2.25+0.75)",
    "√(a^2+b^2)",  # 勾股定理
    "x + y*z/(a-b)^c",
    "(p+q)/(r-s) + t*(u/v)",
    "√(x^2+y^2+z^2+w^2)",
    "log(√(a+b))",
    "(1+x)^n/(1-x)^m",
    "gcd(lcm(a,b),lcm(c,d))",

    # 错误处理测试
    "2++3",  # 连续多个加号
    "4-*5",  # 相连的不兼容运算符
    "6(/7",  # 不匹配的括号
    "8)",  # 缺少左括号
    "mod()",  # 缺少函数参数
    "pow(,)",  # 分隔符无参数
    "3,4,5",  # 上下文外的分隔符
    "**5",  # 缺少底数
    "2**",  # 缺少指数
    "√",  # 缺少被开方数
    "!",  # 缺少阶乘对象
    "|",  # 缺少绝对值内容
    "°",  # 缺少角度值
    "a =",  # 等号后缺少内容
    "= b",  # 等号前缺少内容
    "3 + *4",  # 运算符冲突
    "5 / /6",  # 连续除号
    "7?",  # 数字后问号
    "pow?",  # 函数后问号
    "pow(x",  # 函数参数未闭合
    "3 + (4 * 5",  # 未闭合括号
    "6 - )7",  # 未开启括号
    "8 * 9)",  # 多余的闭合括号
    "[1 + 2)",  # 括号类型不匹配
    "foo(3)",  # 未定义函数
    "√-4",  # 负数开方
    "0/0",  # 零除以零
    "3%",  # 百分号而非取余（这是正确的百分数）
    "5%2",  # 取余而非百分号（这是正确的取余）
    "-0%",  # 负零百分数
    "mod(3,)",  # 函数参数缺失
    "mod(,3)",  # 函数参数缺失
    "pow(2,3,4)",  # 参数过多
    "sqrt(1,2)",  # 参数过多
    "1.0.0",  # 多个小数点
    "2^$",  # 非法字符
    "mod(@,#)",  # 非法字符作为参数
    "<@#$>",  # 非法字符作为自定义无理数名称
    "1,0.5",  # 小数点前使用分隔符
    "1.0,5",  # 小数点后使用分隔符
    ".",  # 只有一个小数点

    # 易错情况测试
    "2(3+4)",  # 隐式乘法
    "2π",  # 数字与无理数相乘
    "3.14.15",  # 多个小数点
    "5/6/7",  # 连续分数
    "2//3",  # 连续除号
    "x?-1.5",  # 负数值的无理数
    "(x)(y)",  # 表达式连乘
    "(3+4)(5+6)",  # 表达式连乘
    "x^2^3",  # 嵌套幂
    "a+++b",  # 多个连续符号（可能导致困惑）
    "5!(3+4)",  # 阶乘后跟表达式
    "|3-5|+|4-2|",  # 多个绝对值表达式
    "(a+b)!",  # 表达式的阶乘
    "3/0",  # 除以零
    "sqrt()",  # 函数缺少参数
    "rad()",  # 函数缺少参数
    "1/√2",  # 分母有根号（合法但容易出错）
    "2^(3/4)",  # 带括号的分数指数
    "pow(2,1/0)",  # 函数参数出现除以零

    # 极端情况测试
    "",  # 空字符串
    " ",  # 只有空格
    "\t",  # 只有制表符
    "\n",  # 只有换行符
    "1000000000",  # 大整数
    "0.000000001",  # 小小数
    "1/1000000000",  # 小分数
    "999999999/1",  # 大分数
    "999\\999/999",  # 大带分数
    ".5.5.5.5.5.5",  # 多重重复
    "π^π^π",  # 嵌套无理数幂
    "𝑒^(π*i)+1",  # 欧拉恒等式形式
    "x^2+y^2=r^2",  # 带等号的表达式
    "a*a*a*a*a*a*a*a*a*a",  # 重复表达式
    "((((((((((1+2)+3)+4)+5)+6)+7)+8)+9)+10)",  # 深度嵌套
    "abcdefghijklmnopqrstuvwxyz",  # 26个字母连乘
    "1/2/3/4/5/6/7/8/9/10",  # 连续分数
    "1^2^3^4^5^6^7^8^9^10",  # 连续幂
    "1+2+3+4+5+6+7+8+9+10",  # 连续加法

    # 无理数结合测试
    "π+𝑒",
    "π-𝑒",
    "π*𝑒",
    "π/𝑒",
    "π^𝑒",
    "𝑒^π",
    "√π",
    "√𝑒",
    "π+x",
    "𝑒*y",
    "√(π^2+𝑒^2)",
    "π?3+𝑒?4",
    "x?-*π",
    "y?+/𝑒",
    "<phi>?1.618*π",
    "π^2 + 𝑒^2 - 2*π*𝑒",  # 完全平方公式
    "abs(π-𝑒)",  # 无理数差的绝对值
    "mod(π,𝑒)",  # 无理数取余
    "pow(π,𝑒)",  # 无理数幂函数

    # 复合表达式测试
    "3*(4+5)^2",
    "pow(2,3)+1/2",  # 文档示例
    "pow(4,1/2)",  # 文档示例
    "(a+b)^2 = a^2 + 2ab + b^2",  # 公式表达形式
    "F = G*m1*m2/r^2",  # 万有引力公式
    "E = mc^2",  # 质能方程
    "PV = nRT",  # 理想气体状态方程
    "x = (-b±√(b^2-4ac))/(2a)",  # 一元二次方程求根公式

    # 包含数字分隔符的复杂表达式
    "1,000,000 + 2,500,000",  # 带分隔符的大数加法
    "(1,000 + 500) * 1,000",  # 带分隔符的混合运算
    "1,000,000/1,000",  # 带分隔符的分数
    "3,141,592.653... / 1,000,000",  # 带分隔符的循环小数除法
    "pow(1,000;2)",  # 带分隔符的函数参数
    "pow(1,000,2)",  # 使用逗号的函数参数（应解析为三个参数，错误）
    "gcd(1,200;1,800)",  # 带分隔符的GCD函数
    "lcm(2,500;3,500)",  # 带分隔符的LCM函数
    "sqrt(1,000,000)",  # 带分隔符的开方（可能解析为函数多参数，错误）
    "1,234.567... + 9,876.543:21",  # 混合带分隔符的循环小数
    "5,000% * 0.2",  # 带分隔符的百分数
    "√(1,000,000)",  # 带分隔符的根号
    "1,000\\1/2 + 2,000\\3/4",  # 带分隔符的带分数加法

    # 超长表达式
    "(pow(2,10) + sqrt(1,000,000) - gcd(252;105)) * (3.14... + 2.718...) / (rad(180) - rad(90))",
    "((1,000\\1/2 * 3.333...) + (2,500% * 0.04)) / (√(100) * |<phi>?1.618 - π|) + 75% * (1 + 0.5:5)",
    "gcd(lcm(24;36);lcm(48;60)) * √(pow(3;2) + pow(4;2)) / (1\\1/2 + 2\\3/4) - abs(0.9999... - 1)",
    "((a?2.5)^(b?3.1) * √(x^2 + y^2)) / (π^𝑒 - |z?- - w|) + pow(fact(5);fact(3))",
    "(3.14... * r^2) / (2π * r) + √(1,000,000) - (1/2/3/4/5) + pow(2;pow(3;4))",

    # 文档中描述的特殊错误情况
    "pow(100,000;2)",  # 使用分号避免数字分隔符歧义（正确）
    "pow(100,000,2)",  # 不使用分号导致解析错误（错误，应解析为三个参数）
    "3x/5xy",  # 文档示例，应简化为 3/5y
    "|x-?|",  # 文档示例，应为 -x
    "<num>1/2?",  # 文档示例
    "pow(2,1/2)?3",  # 文档示例，结果保留3位小数
    "3+(3/4+[5/6])",  # 文档描述的错误示例（中括号层级错误）
    "2+{3*[4+1]}",  # 文档描述的错误示例（大括号层级错误）
    "[[2/3π+1]*x]-[sin(π)*(2^1/2-1)]",  # 文档描述的合法示例（但sin函数不支持）
    "1+-2.5+2/3+<一个无理数>-2_1/3+pi+x+2.34...-0.5:5+(<number>+i/3i/500)",  # 文档的综合示例

    # 带复杂空格的表达式
    "  3  +  4  *  (  5  -  2  )  /  √  (  16  +  9  )  ",
    "pow  (  2  ;  3  )  +  abs  (  -  5  )  *  fact  (  4  )",

    # 包含各种错误的混合表达式
    "3 + + 4 * 5 - ) / 2",
    "pow(a,b)) + sqrt(c",
    "√(a^2+b^2+c^2]",
    "3*(4+5]/(6-7)",
    "pow(a,b,c) + gcd(x,y,z)",
    "3**4**",
    "[4+5}*{6-7]",
    "a+b+c+d+e+f+g+",
    "(3+4)(5+6](7+8)",
    "pow(sqrt()",

    # 特殊运算组合
    "1 + 2 - 3 * 4 / 5 ^ 6 % 7 ! ° | √",
    "pow(2,3) * sqrt(16) - abs(-5) + fact(4) - gcd(12;18) + lcm(4;6)",

    # 极端符号组合
    "++++----****////^^^^!!!!%%%%||||√√√√",
    "((((((([[[[[[{{{{{{)))))))]]]]]]}}}}}}"
]


# Write Data
pending = (['retain_decimal_places', retain_decimal_places], ['symbol_mapping_table', symbol_mapping_table], ['function_conversion_table', function_conversion_table], ['formatting_output_function_options_table', formatting_output_function_options_table], ['transcendental_function_table', transcendental_function_table], ['test_cases', test_cases])
for table in pending:
    ss.write(table[0], table[1], file='olocconfig.ini')
print('olocconfig updated')
